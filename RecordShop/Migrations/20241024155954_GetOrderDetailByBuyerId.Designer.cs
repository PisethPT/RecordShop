// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecordShop.Data;

#nullable disable

namespace RecordShop.Migrations
{
    [DbContext(typeof(VinylRecordsContext))]
    [Migration("20241024155954_GetOrderDetailByBuyerId")]
    partial class GetOrderDetailByBuyerId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecordShop.Models.Band", b =>
                {
                    b.Property<int>("BandId")
                        .HasColumnType("int");

                    b.Property<string>("BandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfAlbums")
                        .HasColumnType("int");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.HasKey("BandId")
                        .HasName("PK__Band__A03693A8A0E6EE70");

                    b.HasIndex("GenreId");

                    b.ToTable("Band", (string)null);
                });

            modelBuilder.Entity("RecordShop.Models.Buyer", b =>
                {
                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.HasKey("BuyerId")
                        .HasName("PK__Buyer__4B81C62A85753BF4");

                    b.ToTable("Buyer", (string)null);
                });

            modelBuilder.Entity("RecordShop.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.HasKey("GenreId")
                        .HasName("PK__Genre__0385057E7DC4D7E9");

                    b.ToTable("Genre", (string)null);
                });

            modelBuilder.Entity("RecordShop.Models.OrderDetailByBuyerId", b =>
                {
                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Paid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Remain")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VinylName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("OrderDetailByBuyers");
                });

            modelBuilder.Entity("RecordShop.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.HasKey("PublisherId")
                        .HasName("PK__Publishe__4C657FAB77A47D9A");

                    b.ToTable("Publisher", (string)null);
                });

            modelBuilder.Entity("RecordShop.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<double?>("Paid")
                        .HasColumnType("float");

                    b.Property<double?>("Remain")
                        .HasColumnType("float");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.HasKey("SaleId")
                        .HasName("PK__Sale__1EE3C3FFBFD42E75");

                    b.HasIndex("BuyerId");

                    b.HasIndex("SellerId");

                    b.ToTable("Sale", (string)null);
                });

            modelBuilder.Entity("RecordShop.Models.SaleDetail", b =>
                {
                    b.Property<int>("SaleDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SaleId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("VinylId")
                        .HasColumnType("int");

                    b.HasKey("SaleDetailId")
                        .HasName("PK__SaleDeta__70DB14FEF14198AA");

                    b.HasIndex("SaleId");

                    b.HasIndex("VinylId");

                    b.ToTable("SaleDetail", (string)null);
                });

            modelBuilder.Entity("RecordShop.Models.Seller", b =>
                {
                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SellerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.HasKey("SellerId")
                        .HasName("PK__Seller__7FE3DB8132E57C05");

                    b.ToTable("Seller", (string)null);
                });

            modelBuilder.Entity("RecordShop.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4CD30348B1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RecordShop.Models.Vinyl", b =>
                {
                    b.Property<int>("VinylId")
                        .HasColumnType("int");

                    b.Property<int?>("BandId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfPublishing")
                        .HasColumnType("datetime");

                    b.Property<int>("NumberOfTrack")
                        .HasColumnType("int");

                    b.Property<double>("PrimeCost")
                        .HasColumnType("float");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("int");

                    b.Property<double>("SalePrice")
                        .HasColumnType("float");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("VinylName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("VinylId")
                        .HasName("PK__Vinyl__52D1755795B2D11D");

                    b.HasIndex("BandId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Vinyl", (string)null);
                });

            modelBuilder.Entity("RecordShop.Models.VinylForDiscount", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DiscountDate")
                        .HasColumnType("datetime");

                    b.Property<double>("SellingPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.Property<int?>("VinylId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__VinylFor__3214EC07D5F9DEDF");

                    b.HasIndex("VinylId");

                    b.ToTable("VinylForDiscount", (string)null);
                });

            modelBuilder.Entity("RecordShop.Models.Band", b =>
                {
                    b.HasOne("RecordShop.Models.Genre", "Genre")
                        .WithMany("Bands")
                        .HasForeignKey("GenreId")
                        .HasConstraintName("FK__Band__GenreId__3B75D760");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("RecordShop.Models.Sale", b =>
                {
                    b.HasOne("RecordShop.Models.Buyer", "Buyer")
                        .WithMany("Sales")
                        .HasForeignKey("BuyerId")
                        .HasConstraintName("FK__Sale__BuyerId__4BAC3F29");

                    b.HasOne("RecordShop.Models.Seller", "Seller")
                        .WithMany("Sales")
                        .HasForeignKey("SellerId")
                        .HasConstraintName("FK__Sale__SellerId__4AB81AF0");

                    b.Navigation("Buyer");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("RecordShop.Models.SaleDetail", b =>
                {
                    b.HasOne("RecordShop.Models.Sale", "Sale")
                        .WithMany("SaleDetails")
                        .HasForeignKey("SaleId")
                        .HasConstraintName("FK__SaleDetai__SaleI__4E88ABD4");

                    b.HasOne("RecordShop.Models.Vinyl", "Vinyl")
                        .WithMany("SaleDetails")
                        .HasForeignKey("VinylId")
                        .HasConstraintName("FK__SaleDetai__Vinyl__4F7CD00D");

                    b.Navigation("Sale");

                    b.Navigation("Vinyl");
                });

            modelBuilder.Entity("RecordShop.Models.Vinyl", b =>
                {
                    b.HasOne("RecordShop.Models.Band", "Band")
                        .WithMany("Vinyls")
                        .HasForeignKey("BandId")
                        .HasConstraintName("FK__Vinyl__BandId__403A8C7D");

                    b.HasOne("RecordShop.Models.Publisher", "Publisher")
                        .WithMany("Vinyls")
                        .HasForeignKey("PublisherId")
                        .HasConstraintName("FK__Vinyl__Publisher__412EB0B6");

                    b.Navigation("Band");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("RecordShop.Models.VinylForDiscount", b =>
                {
                    b.HasOne("RecordShop.Models.Vinyl", "Vinyl")
                        .WithMany("VinylForDiscounts")
                        .HasForeignKey("VinylId")
                        .HasConstraintName("FK__VinylForD__Vinyl__440B1D61");

                    b.Navigation("Vinyl");
                });

            modelBuilder.Entity("RecordShop.Models.Band", b =>
                {
                    b.Navigation("Vinyls");
                });

            modelBuilder.Entity("RecordShop.Models.Buyer", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("RecordShop.Models.Genre", b =>
                {
                    b.Navigation("Bands");
                });

            modelBuilder.Entity("RecordShop.Models.Publisher", b =>
                {
                    b.Navigation("Vinyls");
                });

            modelBuilder.Entity("RecordShop.Models.Sale", b =>
                {
                    b.Navigation("SaleDetails");
                });

            modelBuilder.Entity("RecordShop.Models.Seller", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("RecordShop.Models.Vinyl", b =>
                {
                    b.Navigation("SaleDetails");

                    b.Navigation("VinylForDiscounts");
                });
#pragma warning restore 612, 618
        }
    }
}
